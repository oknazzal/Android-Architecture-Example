// Generated by Dagger (https://dagger.dev).
package com.oknazzal.architecture.example.feature.images.domain.usecase;

import com.oknazzal.architecture.example.feature.images.domain.ImagesRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetImageByIdUseCase_Factory implements Factory<GetImageByIdUseCase> {
  private final Provider<ImagesRepository> repositoryProvider;

  public GetImageByIdUseCase_Factory(Provider<ImagesRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetImageByIdUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetImageByIdUseCase_Factory create(Provider<ImagesRepository> repositoryProvider) {
    return new GetImageByIdUseCase_Factory(repositoryProvider);
  }

  public static GetImageByIdUseCase newInstance(ImagesRepository repository) {
    return new GetImageByIdUseCase(repository);
  }
}
